services:
  api1:
    build:
      context: .
      dockerfile: .docker/Dockerfile
    container_name: api1
    working_dir: /app
    depends_on:
      - database
    expose:
      - "9000"
    networks:
      - src_default
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'
  api2:
    build:
      context: .
      dockerfile: .docker/Dockerfile
    container_name: api2
    working_dir: /app
    depends_on:
      - database
    expose:
      - "9000"
    networks:
      - src_default
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'
  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./.docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./:/app
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    networks:
      - src_default
    environment:
      - NGINX_HOST=localhost
      - NGINX_PORT=9999
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'

  database:
    image: mysql:8.0.40
    container_name: database
    ports:
      - ${DB_PORT}:${FORWARD_DB_PORT}
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: person
    volumes:
      - ./.docker/local/mysql:/var/lib/mysql
    networks:
      - src_default
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: '1.5GB'

networks:
  src_default:
    driver: bridge
